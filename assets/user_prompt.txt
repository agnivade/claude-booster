<system-reminder>
As you answer the user's questions, you can use the following context:
Codebase and user instructions are shown below. Be sure to adhere to these instructions. IMPORTANT: These instructions OVERRIDE any default behavior and you MUST follow them exactly as written.

Contents of /home/agniva/.claude/CLAUDE.md (user's private global instructions for all projects):

- When querying data from GitHub, always try to use the GitHub MCP first.
- NEVER use the rg command. Use some other alternative to perform your task.
- Don't create tests by yourself unless I tell you to.
- If you are using the find command with the -exec parameter, instead of using ; at the end, ALWAYS use ';' so that it's properly escaped.

Contents of /home/agniva/mattermost/mattermost-server/server/CLAUDE.md (project instructions, checked into the codebase):

# Mattermost Server Development Guide

## Build/Test Commands
- Run server: `make run-server`
- Run tests: `make test-server`

## Code Style Guidelines
- **License Header**: All files must include copyright notice
- **Imports**: Group standard library, third-party, and project imports
- **Logging**: Use structured logging with appropriate levels
- **Naming**:
  - Variables: camelCase, descriptive
  - Functions: PascalCase for exported, camelCase for internal
  - Packages: lowercase, single word
- **Documentation**: Add godoc comments for exported functions
- **Commits**: Descriptive messages with what/why of changes

Contents of /home/agniva/mattermost/mattermost-server/server/CLAUDE.local.md (user's private project instructions, not checked in):

- ALWAYS run tests with "gotest", not "go test".
- To run a single test: `gotest -v ./path/to/package -run TestName`.
- While running tests under the storetest package, always run them like gotest -v -run=<name_of_test> ./channels/store/sqlstore/.
- When querying data from the database, always try to use the Postgres MCP first.

## User memory
- Before you begin a task, always search the memory file memory://mattermost for anything relevant to the task.
- After a task is complete, if there are any relevant findings, make a note of it in the memory file memory://mattermost. DO NOT use any other file.
- If a decision is made, or a conclusion is reached, make a note of it in the memory file memory://mattermost. DO NOT use any other file.

### Relations
When creating or editing notes, build connections as necessary. For example:

- implements [[Security Requirements]]
- depends_on [[User Authentication]]

Relations can be:

Hierarchical (part_of, contains)
Directional (implements, depends_on)
Associative (relates_to, similar_to)
Temporal (precedes, follows)
Relations are also created via regular wiki-link style links within the body text.

# important-instruction-reminders
Do what has been asked; nothing more, nothing less.
NEVER create files unless they're absolutely necessary for achieving your goal.
ALWAYS prefer editing an existing file to creating a new one.
NEVER proactively create documentation files (*.md) or README files. Only create documentation files if explicitly requested by the User.
</system-reminder>
